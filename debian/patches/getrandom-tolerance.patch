--- a/src/_cffi_src/openssl/src/osrandom_engine.c
+++ b/src/_cffi_src/openssl/src/osrandom_engine.c
@@ -349,7 +349,7 @@
                     CRYPTOGRAPHY_OSRANDOM_R_GETRANDOM_INIT_FAILED_UNEXPECTED,
                     "errno", e
                 );
-                getrandom_works = CRYPTOGRAPHY_OSRANDOM_GETRANDOM_INIT_FAILED;
+                getrandom_works = CRYPTOGRAPHY_OSRANDOM_GETRANDOM_INIT_FAILED_EAGAIN;
                 break;
             }
         }
@@ -368,7 +368,14 @@
 static int osrandom_rand_bytes(unsigned char *buffer, int size) {
     long n;
 
+    if (getrandom_works == CRYPTOGRAPHY_OSRANDOM_GETRANDOM_INIT_FAILED_EAGAIN) {
+        /* Try to initialize again -- the kernel CPRNG may now be seeded */
+        (void) osrandom_init(NULL);
+    }
+
     switch(getrandom_works) {
+    case CRYPTOGRAPHY_OSRANDOM_GETRANDOM_INIT_FAILED_EAGAIN:
+        /* fall through */
     case CRYPTOGRAPHY_OSRANDOM_GETRANDOM_INIT_FAILED:
         ERR_Cryptography_OSRandom_error(
             CRYPTOGRAPHY_OSRANDOM_F_RAND_BYTES,
@@ -414,6 +421,8 @@
 
 static int osrandom_rand_status(void) {
     switch(getrandom_works) {
+    case CRYPTOGRAPHY_OSRANDOM_GETRANDOM_INIT_FAILED_EAGAIN:
+        return 0;
     case CRYPTOGRAPHY_OSRANDOM_GETRANDOM_INIT_FAILED:
         return 0;
     case CRYPTOGRAPHY_OSRANDOM_GETRANDOM_NOT_INIT:
@@ -428,6 +437,8 @@
 
 static const char *osurandom_get_implementation(void) {
     switch(getrandom_works) {
+    case CRYPTOGRAPHY_OSRANDOM_GETRANDOM_INIT_FAILED_EAGAIN:
+        return "<failed>";
     case CRYPTOGRAPHY_OSRANDOM_GETRANDOM_INIT_FAILED:
         return "<failed>";
     case CRYPTOGRAPHY_OSRANDOM_GETRANDOM_NOT_INIT:
--- a/src/_cffi_src/openssl/src/osrandom_engine.h
+++ b/src/_cffi_src/openssl/src/osrandom_engine.h
@@ -60,7 +60,8 @@
 #endif
 
 enum {
-    CRYPTOGRAPHY_OSRANDOM_GETRANDOM_INIT_FAILED = -2,
+    CRYPTOGRAPHY_OSRANDOM_GETRANDOM_INIT_FAILED_EAGAIN = -3,
+    CRYPTOGRAPHY_OSRANDOM_GETRANDOM_INIT_FAILED,
     CRYPTOGRAPHY_OSRANDOM_GETRANDOM_NOT_INIT,
     CRYPTOGRAPHY_OSRANDOM_GETRANDOM_FALLBACK,
     CRYPTOGRAPHY_OSRANDOM_GETRANDOM_WORKS
